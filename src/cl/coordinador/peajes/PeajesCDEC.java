/*
 * Copyright 2019 Coordinador Electrico Nacional
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package cl.coordinador.peajes;

import static cl.coordinador.peajes.PeajesConstant.SLASH;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.sql.Time;
import java.util.HashMap;
import java.util.Properties;

/**
 * Created on 19-mar-2010, 13:40:42
 *
 * @author aramos
 */
public class PeajesCDEC extends javax.swing.JFrame {
    
    private File nombreDirEnt;
    private File nombreDirSal;
    private File nombreDirLiq;
    private File nombreDirReliq;
    private int tipoCalcSeleccionado;
    private boolean LiquidacionReliquidacion;
    private int anoAEvaluar;
    private String mesAEvaluar;
    private long tInicio;
    private Time tiempo=new Time(0);
//    private Timer timer;
    private Properties propiedades; //Configuraciones del caso TODO: rename
    private static Properties config; //Configuraciones de la herramienta TODO: rename
    private static final String ARCHIVO_CONFIG = "config.xml"; //Nombre archivo unico de configuracion de la herramienta

    /** Creates new form NewJFrame1 */
    public PeajesCDEC() {
        initComponents();
        reLoadOptions();
//        timer = new Timer(1000, new TimerListener());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textoCalculo = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cuadroAnoAEvaluar = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        campoDirectorioEntrada = new javax.swing.JTextField();
        campoDirectorioSalida = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        botonDirectorioEntrada = new javax.swing.JButton();
        botonDirectorioSalida = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        cuadroSeleccionTipoCalculo = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        cuadroAnoBase = new javax.swing.JComboBox();
        cuadroSeleccionTipoCalculo1 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        progreso = new javax.swing.JProgressBar();
        botonCalcular = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        etiquetaTiempo = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        botonCalcular1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        ActClientes = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        Mes = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jSplitPane4 = new javax.swing.JSplitPane();
        jLabel8 = new javax.swing.JLabel();
        cuadroSeleccionSlack = new javax.swing.JTextField();
        jSplitPane1 = new javax.swing.JSplitPane();
        jLabel5 = new javax.swing.JLabel();
        cuadroSeleccionHidro = new javax.swing.JComboBox();
        jSplitPane2 = new javax.swing.JSplitPane();
        jLabel6 = new javax.swing.JLabel();
        cuadroSeleccionNEtapas = new javax.swing.JTextField();
        jSplitPane3 = new javax.swing.JSplitPane();
        jLabel7 = new javax.swing.JLabel();
        cuadroSeleccionOffset = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        DirectorioLiquidacion = new javax.swing.JTextField();
        DirectorioReliquidacion = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        botonDirectorioLiq = new javax.swing.JButton();
        Directorio = new javax.swing.JButton();
        botonCalcularReliq = new javax.swing.JButton();
        Mes1 = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        FecPago = new javax.swing.JTextField();
        botonEscReliq = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        menuOpciones = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        textoCalculo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        textoCalculo.setForeground(java.awt.Color.blue);
        textoCalculo.setText("Departamento de Peajes");
        textoCalculo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        textoCalculo.setMaximumSize(new java.awt.Dimension(530, 30));
        textoCalculo.setMinimumSize(new java.awt.Dimension(530, 30));
        textoCalculo.setPreferredSize(new java.awt.Dimension(530, 30));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cl/coordinador/peajes/resources/logo3.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setMaximumSize(new java.awt.Dimension(530, 44));
        jPanel1.setMinimumSize(new java.awt.Dimension(530, 44));
        jPanel1.setPreferredSize(new java.awt.Dimension(530, 44));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setText("AÃ±o a evaluar:");

        cuadroAnoAEvaluar.setEditable(true);
        cuadroAnoAEvaluar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cuadroAnoAEvaluar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));
        cuadroAnoAEvaluar.setMaximumSize(new java.awt.Dimension(70, 19));
        cuadroAnoAEvaluar.setMinimumSize(new java.awt.Dimension(70, 19));
        cuadroAnoAEvaluar.setPreferredSize(new java.awt.Dimension(70, 19));
        cuadroAnoAEvaluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuadroAnoAEvaluarAccion(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(27, 27, 27)
                .add(cuadroAnoAEvaluar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(cuadroAnoAEvaluar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setMaximumSize(new java.awt.Dimension(530, 138));
        jPanel2.setMinimumSize(new java.awt.Dimension(530, 138));
        jPanel2.setPreferredSize(new java.awt.Dimension(530, 138));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Directorios");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel10.setText("Archivos de Entrada");

        campoDirectorioEntrada.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        campoDirectorioEntrada.setMaximumSize(new java.awt.Dimension(386, 18));
        campoDirectorioEntrada.setMinimumSize(new java.awt.Dimension(386, 18));
        campoDirectorioEntrada.setPreferredSize(new java.awt.Dimension(386, 18));
        campoDirectorioEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDirectorioEntradaActionPerformed(evt);
            }
        });

        campoDirectorioSalida.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        campoDirectorioSalida.setMaximumSize(new java.awt.Dimension(386, 18));
        campoDirectorioSalida.setMinimumSize(new java.awt.Dimension(386, 18));
        campoDirectorioSalida.setPreferredSize(new java.awt.Dimension(386, 18));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel3.setText("Archivos de Salida");

        botonDirectorioEntrada.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        botonDirectorioEntrada.setText("Explorar");
        botonDirectorioEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirDirectorioEnt(evt);
            }
        });

        botonDirectorioSalida.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        botonDirectorioSalida.setText("Explorar");
        botonDirectorioSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirDirectorioSal(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel10)
                    .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(543, 543, 543))
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel2))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(31, 31, 31)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(campoDirectorioEntrada, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                            .add(campoDirectorioSalida, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(botonDirectorioSalida)
                            .add(botonDirectorioEntrada))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel2)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel10)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(campoDirectorioEntrada, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(botonDirectorioEntrada))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel3)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(campoDirectorioSalida, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(botonDirectorioSalida))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setMaximumSize(new java.awt.Dimension(530, 44));
        jPanel3.setMinimumSize(new java.awt.Dimension(530, 44));
        jPanel3.setPreferredSize(new java.awt.Dimension(530, 44));

        cuadroSeleccionTipoCalculo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cuadroSeleccionTipoCalculo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AÃ±o a Evaluar = AÃ±o Base", "AÃ±o a Evaluar != AÃ±o Base" }));
        cuadroSeleccionTipoCalculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuadroSeleccionTipoCalculoAccion(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel4.setText("AÃ±o base:");

        cuadroAnoBase.setEditable(true);
        cuadroAnoBase.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cuadroAnoBase.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));
        cuadroAnoBase.setEnabled(false);
        cuadroAnoBase.setMaximumSize(new java.awt.Dimension(70, 19));
        cuadroAnoBase.setMinimumSize(new java.awt.Dimension(70, 19));
        cuadroAnoBase.setPreferredSize(new java.awt.Dimension(70, 19));

        cuadroSeleccionTipoCalculo1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cuadroSeleccionTipoCalculo1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CÃ¡lculo de LiquidaciÃ³n", "CÃ¡lculo de ReliquidaciÃ³n" }));
        cuadroSeleccionTipoCalculo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuadroSeleccionTipoCalculo1Accion(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(12, 12, 12)
                .add(cuadroSeleccionTipoCalculo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(cuadroSeleccionTipoCalculo1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(32, 32, 32)
                .add(jLabel4)
                .add(18, 18, 18)
                .add(cuadroAnoBase, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(48, 48, 48))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cuadroSeleccionTipoCalculo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cuadroAnoBase, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cuadroSeleccionTipoCalculo1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setMaximumSize(new java.awt.Dimension(530, 76));
        jPanel4.setMinimumSize(new java.awt.Dimension(530, 76));
        jPanel4.setPreferredSize(new java.awt.Dimension(530, 76));

        progreso.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        progreso.setPreferredSize(new java.awt.Dimension(430, 15));

        botonCalcular.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        botonCalcular.setText("Calcular Prorratas");
        botonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcular(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel9.setText("Tiempo de ejecuciÃ³n:");

        etiquetaTiempo.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        etiquetaTiempo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiquetaTiempo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        etiquetaTiempo.setPreferredSize(new java.awt.Dimension(100, 15));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jButton1.setText(" Pagos GeneraciÃ³n");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jButton2.setText("Liq. Mensual InyecciÃ³n");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jButton3.setText("Pagos  Retiro");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        botonCalcular1.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        botonCalcular1.setText("Calcular Peajes");
        botonCalcular1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcular1calcular(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jButton4.setText("Liq.  Mensual Retiro");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jButton5.setText("Escribir Liq. Mes");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jButton6.setText("Esc. Cuadro Anual");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel13.setText("Fecha Pago");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextField1.setText(" dd/mm/aaaa");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        ActClientes.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        ActClientes.setText("Actualizar Clientes");
        ActClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActClientesActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel12.setText("Mes a liquidar");

        Mes.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        Mes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic" }));
        Mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MesActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("Pagos Mensuales:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Pagos Anuales:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel21.setText("LiquidaciÃ³n");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jLabel9, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 105, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(progreso, 0, 0, Short.MAX_VALUE)
                        .add(18, 18, 18)
                        .add(etiquetaTiempo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(13, 13, 13))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jPanel4Layout.createSequentialGroup()
                                .add(jLabel19)
                                .add(18, 18, 18)
                                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jPanel4Layout.createSequentialGroup()
                                        .add(jLabel12)
                                        .add(18, 18, 18)
                                        .add(Mes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(jButton2))
                                    .add(jPanel4Layout.createSequentialGroup()
                                        .add(jLabel13)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jButton5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .add(jPanel4Layout.createSequentialGroup()
                                .add(ActClientes)
                                .add(18, 18, 18)
                                .add(botonCalcular1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 127, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jPanel4Layout.createSequentialGroup()
                                    .add(jLabel20)
                                    .add(53, 53, 53)
                                    .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .add(jLabel21)))
                        .add(18, 18, 18)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButton6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jButton4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(botonCalcular, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel21)
                    .add(botonCalcular)
                    .add(botonCalcular1)
                    .add(ActClientes))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 29, Short.MAX_VALUE)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jButton3)
                        .add(jButton1)
                        .add(jButton6))
                    .add(jLabel20))
                .add(29, 29, 29)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE, false)
                    .add(jButton2)
                    .add(jButton4)
                    .add(jLabel12)
                    .add(jLabel19)
                    .add(Mes, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel13)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel9)
                    .add(etiquetaTiempo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(progreso, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setMaximumSize(new java.awt.Dimension(530, 76));
        jPanel5.setMinimumSize(new java.awt.Dimension(530, 76));
        jPanel5.setPreferredSize(new java.awt.Dimension(530, 76));

        jSplitPane4.setDividerLocation(170);
        jSplitPane4.setPreferredSize(new java.awt.Dimension(250, 22));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel8.setText("NÂº Barra Referencia");
        jLabel8.setMaximumSize(new java.awt.Dimension(65, 8));
        jLabel8.setMinimumSize(new java.awt.Dimension(65, 8));
        jLabel8.setPreferredSize(new java.awt.Dimension(65, 8));
        jSplitPane4.setLeftComponent(jLabel8);

        cuadroSeleccionSlack.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cuadroSeleccionSlack.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cuadroSeleccionSlack.setText("173");
        cuadroSeleccionSlack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuadroSeleccionSlackActionPerformed(evt);
            }
        });
        jSplitPane4.setRightComponent(cuadroSeleccionSlack);

        jSplitPane1.setDividerLocation(170);
        jSplitPane1.setMaximumSize(new java.awt.Dimension(65, 8));
        jSplitPane1.setMinimumSize(new java.awt.Dimension(65, 8));
        jSplitPane1.setPreferredSize(new java.awt.Dimension(250, 22));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel5.setText("NÂº HidrologÃ­as");
        jLabel5.setMaximumSize(new java.awt.Dimension(65, 8));
        jLabel5.setMinimumSize(new java.awt.Dimension(65, 8));
        jLabel5.setPreferredSize(new java.awt.Dimension(65, 8));
        jSplitPane1.setLeftComponent(jLabel5);

        cuadroSeleccionHidro.setEditable(true);
        cuadroSeleccionHidro.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cuadroSeleccionHidro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60" }));
        cuadroSeleccionHidro.setMaximumSize(new java.awt.Dimension(65, 8));
        cuadroSeleccionHidro.setMinimumSize(new java.awt.Dimension(65, 8));
        cuadroSeleccionHidro.setPreferredSize(new java.awt.Dimension(65, 8));
        cuadroSeleccionHidro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuadroSeleccionHidroActionPerformed(evt);
            }
        });
        jSplitPane1.setRightComponent(cuadroSeleccionHidro);

        jSplitPane2.setDividerLocation(170);
        jSplitPane2.setPreferredSize(new java.awt.Dimension(250, 22));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel6.setText("NÂº Etapas/AÃ±o");
        jLabel6.setMaximumSize(new java.awt.Dimension(65, 8));
        jLabel6.setMinimumSize(new java.awt.Dimension(65, 8));
        jLabel6.setPreferredSize(new java.awt.Dimension(65, 8));
        jSplitPane2.setLeftComponent(jLabel6);

        cuadroSeleccionNEtapas.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cuadroSeleccionNEtapas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cuadroSeleccionNEtapas.setText("240");
        cuadroSeleccionNEtapas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuadroSeleccionNEtapasActionPerformed(evt);
            }
        });
        jSplitPane2.setRightComponent(cuadroSeleccionNEtapas);

        jSplitPane3.setDividerLocation(170);
        jSplitPane3.setPreferredSize(new java.awt.Dimension(250, 22));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setText("Offset Etapas");
        jLabel7.setMaximumSize(new java.awt.Dimension(65, 8));
        jLabel7.setMinimumSize(new java.awt.Dimension(65, 8));
        jLabel7.setPreferredSize(new java.awt.Dimension(65, 8));
        jSplitPane3.setLeftComponent(jLabel7);

        cuadroSeleccionOffset.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        cuadroSeleccionOffset.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cuadroSeleccionOffset.setText("15");
        cuadroSeleccionOffset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuadroSeleccionOffsetActionPerformed(evt);
            }
        });
        jSplitPane3.setRightComponent(cuadroSeleccionOffset);

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jSplitPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSplitPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jSplitPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jSplitPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jSplitPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jSplitPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jSplitPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jSplitPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setMaximumSize(new java.awt.Dimension(530, 138));
        jPanel6.setMinimumSize(new java.awt.Dimension(530, 138));
        jPanel6.setPreferredSize(new java.awt.Dimension(600, 137));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel14.setText("ReliquidaciÃ³n por IT");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel15.setText("Directorio de Archivo LiquidaciÃ³nMes.xls");

        DirectorioLiquidacion.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        DirectorioLiquidacion.setMaximumSize(new java.awt.Dimension(386, 18));
        DirectorioLiquidacion.setMinimumSize(new java.awt.Dimension(386, 18));
        DirectorioLiquidacion.setPreferredSize(new java.awt.Dimension(386, 18));
        DirectorioLiquidacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectorioLiquidacionActionPerformed(evt);
            }
        });

        DirectorioReliquidacion.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        DirectorioReliquidacion.setMaximumSize(new java.awt.Dimension(386, 18));
        DirectorioReliquidacion.setMinimumSize(new java.awt.Dimension(386, 18));
        DirectorioReliquidacion.setPreferredSize(new java.awt.Dimension(386, 18));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel16.setText("Directorio ReliquidaciÃ³n");

        botonDirectorioLiq.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        botonDirectorioLiq.setText("Explorar");
        botonDirectorioLiq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDirectorioLiqabrirDirectorioEnt(evt);
            }
        });

        Directorio.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        Directorio.setText("Explorar");
        Directorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DirectorioabrirDirectorioSal(evt);
            }
        });

        botonCalcularReliq.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        botonCalcularReliq.setText("Calc. ReliquidaciÃ³n");
        botonCalcularReliq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularReliqcalcular(evt);
            }
        });

        Mes1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        Mes1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic" }));
        Mes1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mes1ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel17.setText("Mes a Reliiquidar");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel18.setText("Fecha Pago");

        FecPago.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        FecPago.setText(" dd/mm/aaaa");
        FecPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FecPagoActionPerformed(evt);
            }
        });

        botonEscReliq.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        botonEscReliq.setText("Escribir Archivos");
        botonEscReliq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEscReliqcalcular(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jLabel14)
                        .add(18, 18, 18)
                        .add(jLabel17)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(Mes1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel18)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(FecPago, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
                            .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel15)
                                .add(jLabel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(323, 323, 323))
                        .add(jPanel6Layout.createSequentialGroup()
                            .add(21, 21, 21)
                            .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jPanel6Layout.createSequentialGroup()
                                    .add(botonCalcularReliq)
                                    .add(28, 28, 28)
                                    .add(botonEscReliq))
                                .add(jPanel6Layout.createSequentialGroup()
                                    .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(DirectorioLiquidacion, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)
                                        .add(DirectorioReliquidacion, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                    .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(botonDirectorioLiq)
                                        .add(Directorio)))))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(6, 6, 6)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(jLabel17)
                    .add(Mes1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel18)
                    .add(FecPago, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel15)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(DirectorioLiquidacion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(botonDirectorioLiq))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel16)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(DirectorioReliquidacion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(Directorio))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(botonEscReliq)
                    .add(botonCalcularReliq))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Carga Configuracion");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Guarda Configuracion");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        menuOpciones.setText("Opciones");
        menuOpciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOpcionesActionPerformed(evt);
            }
        });
        jMenu1.add(menuOpciones);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                    .add(textoCalculo, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(jLabel11)
                        .add(18, 18, 18)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 194, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel11)
                    .add(layout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 193, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(textoCalculo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calcular(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcular
        calcular();
}//GEN-LAST:event_calcular

    private void abrirDirectorioEnt(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirDirectorioEnt
        abrirDirectorioEntAccion();
}//GEN-LAST:event_abrirDirectorioEnt

    private void abrirDirectorioSal(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirDirectorioSal
        abrirDirectorioSalAccion();
}//GEN-LAST:event_abrirDirectorioSal

    private void cuadroAnoAEvaluarAccion(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuadroAnoAEvaluarAccion
        seleccionaNumHid();
    }//GEN-LAST:event_cuadroAnoAEvaluarAccion

    private void cuadroSeleccionTipoCalculoAccion(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuadroSeleccionTipoCalculoAccion
        habilitarAnoABase();
    }//GEN-LAST:event_cuadroSeleccionTipoCalculoAccion

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        calcularPeajesIny();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        calcularPeajesRet();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void botonCalcular1calcular(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcular1calcular
        calcularPeajes();
    }//GEN-LAST:event_botonCalcular1calcular

    private void MesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MesActionPerformed
         // TODO add your handling code here:
    }//GEN-LAST:event_MesActionPerformed

    private void cuadroSeleccionHidroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuadroSeleccionHidroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuadroSeleccionHidroActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    CalculaLiquiMesIny();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       CalculaLiquiMesRet();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        EscribeLiquiMes();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        EscribeLiquiAno();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void cuadroSeleccionNEtapasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuadroSeleccionNEtapasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuadroSeleccionNEtapasActionPerformed

    private void cuadroSeleccionOffsetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuadroSeleccionOffsetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuadroSeleccionOffsetActionPerformed

    private void cuadroSeleccionSlackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuadroSeleccionSlackActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuadroSeleccionSlackActionPerformed

    private void ActClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActClientesActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ActClientesActionPerformed

    private void botonDirectorioLiqabrirDirectorioEnt(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDirectorioLiqabrirDirectorioEnt
        // TODO add your handling code here:
        abrirDirectorioEntAccionRel();
    }//GEN-LAST:event_botonDirectorioLiqabrirDirectorioEnt

    private void DirectorioabrirDirectorioSal(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectorioabrirDirectorioSal
        // TODO add your handling code here:
        abrirDirectorioSalAccionRel();
    }//GEN-LAST:event_DirectorioabrirDirectorioSal

    private void botonCalcularReliqcalcular(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularReliqcalcular
        // TODO add your handling code here:
        calcularReliquidacion();
    }//GEN-LAST:event_botonCalcularReliqcalcular

    private void Mes1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Mes1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Mes1ActionPerformed

    private void FecPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecPagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FecPagoActionPerformed

    private void botonEscReliqcalcular(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEscReliqcalcular
        // TODO add your handling code here:
        EscReliquidacion();
    }//GEN-LAST:event_botonEscReliqcalcular

    private void cuadroSeleccionTipoCalculo1Accion(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuadroSeleccionTipoCalculo1Accion
        // TODO add your handling code here:
        seleccionTipoLiquidacion();
    }//GEN-LAST:event_cuadroSeleccionTipoCalculo1Accion

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        leePropiedades();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        EscribrePropiedades();
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void campoDirectorioEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDirectorioEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDirectorioEntradaActionPerformed

    private void DirectorioLiquidacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DirectorioLiquidacionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DirectorioLiquidacionActionPerformed

    private void menuOpcionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOpcionesActionPerformed
        showOptionWindow();
    }//GEN-LAST:event_menuOpcionesActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        salirPeajes();
    }//GEN-LAST:event_formWindowClosing

    public static void main(String args[]) {
               
        HashMap<String, Integer> argsMap= new HashMap<String, Integer>();
            
        if(args != null & args.length > 0){
            
            System.out.println("Uso: java -jar -Xmx5000m PeajesCDECSIC.jar");
            
            
            /* Inicio Codigo via CLI*/
            
            /*
            
            
            File entrada = null;               //carpeta entrada
            File salida = null;                //carpeta entrada
            int anoBase2 = 2004;               //aâo base
            int anoAEvaluar2 = anoBase2;           //aâo a evaluar
            int tipoCalcSeleccionado2 = 1;  // tipo de calculo
            int numHidro2 = 49;              //numero de hidrologias
            int numEtapasAno2 = 240;          //numero de etapas por aâo
            int numSlack2 = 14;              //barra slack
            int offset2 = 36 ;                //offset de etapas
            boolean clientes2 = false;          //actualiza clientes
            int calculo = 1;
            
            
            
            for(int i = 0; i < args.length; i++)
            argsMap.put(args[i], i);
                     
            if (argsMap.containsKey("-h")){
                System.out.println("Uso: java -jar -Xmx900m PeajesCDECSIC.jar [-parÃ¡metros]\n\n"
                        + "ParÃ¡metros obligatorios:\n"
                        + "-i path\t\t\tDirectorio de entrada.\n"
                        + "-o path\t\t\tDirectorio de salida.\n"
                        + "-hid hidrologÃ­as\tNÃºmero de hidrologÃ­as\n"
                        + "-calculo num\t\tOpciÃ³n de cÃ¡lculo:\n"
                        + "\t\t\t1: asdf\n"
                        + "\t\t\t2: asdf\n"
                        + "\t\t\t3: asdf\n"
                        + "\t\t\t4: asdf\n"
                        + "\t\t\t5: asdf\n"
                        + "ParÃ¡metros opcionales:\n"
                        + "-abase aâo\t\tAÃ±o basae.\n"
                        + "-aev aâo\t\tAÃ±o a evaluar.\n"
                        + "-etapas etapas\t\tNÃºmero de etapas por aÃ±o (defecto 240).\n"
                        + "-slack barra\t\tBarra de referencia (defecto 14).\n"
                        + "-offset etapas\t\tOffset de Etapas (defecto 36).");
                System.exit(0);
            }
            
            try { //se intenta parsear los argumentos obligatorios
                 
                entrada  = new File(args[argsMap.get("-i")+1]);
                salida  = new File(args[argsMap.get("-o")+1]);
                numHidro2 = Integer.parseInt(args[argsMap.get("-hid")+1]);
                
                

            
            }
            catch (NullPointerException e) {
                System.err.println("Faltan argumentos, pruebe opciÃ³n -h para ver ayuda");
                System.exit(1);
            }
                    
            catch (NumberFormatException e) {
                System.err.println("Argumento invÃ¡lido, pruebe opciÃ³n -h para ver ayuda");
                System.exit(1);    
            }
            
            
            try { //se intenta parsear los argumentos opcionales


                
                anoBase2  = Integer.parseInt(args[argsMap.get("-abase")+1]);
                anoAEvaluar2  =   Integer.parseInt(args[argsMap.get("-aev")+1]);      
                numEtapasAno2 =  Integer.parseInt(args[argsMap.get("-etapas")+1]);
                numSlack2 =  Integer.parseInt(args[argsMap.get("-slack")+1]);
                offset2 =  Integer.parseInt(args[argsMap.get("-offset")+1]);
                
                
            }
            catch (NullPointerException e) {
                System.out.println("Advertencia, se usa valores por defecto para las siguientes opciones:\n");
            }
            catch (NumberFormatException e) {
                System.err.println("Argumento invÃ¡lido, pruebe opciÃ³n -h para ver ayuda");
                System.exit(1);    
            }
            try { //se intenta parsear el calculo a realizar
                

                calculo = Integer.parseInt(args[argsMap.get("-calculo")+1]);
                
            
            }
            catch (NullPointerException e) {
                System.err.println("No se ha especificado una opciÃ³n de cÃ¡lculo, use opcion -h para ver ayuda");
                System.exit(1);
            }
            
            
            switch (calculo) {
                
            /*
             * Calculos:
             *      Peajes
             *      Prorratas
             *      Pagos Retiro
             *      Pagos de Generacion
             *      Cuadros anuales
             * 
             *      Liq Mensual Inyeccion
             *      Liq Mensual de Retiro
             *      Liquidacion Mes
             * 
             *      Calc Reliquidacion
             *      Escribir archivos Reliquidacion
             
             
             
             
             */    
            /*    
            //Prorratas.Comenzar(nombreDirEnt,nombreDirSal,anoAEvaluar,tipoCalcSeleccionado,anoBase,numHidro,numEtapasAno,numSlack,offset,clientes);
            case 1:    
                Prorratas.Comenzar(entrada,salida,anoAEvaluar2,tipoCalcSeleccionado2,anoBase2,numHidro2,numEtapasAno2,numSlack2,offset2,clientes2);
            case 2:
                System.out.println(""+anoAEvaluar2 + " " +tipoCalcSeleccionado2 + " " +anoBase2 + " " +numHidro2 + " " +numEtapasAno2 + " " +numSlack2 + " " +offset2);   
            case 3:
                System.out.println(""+anoAEvaluar2 + " " +tipoCalcSeleccionado2 + " " +anoBase2 + " " +numHidro2 + " " +numEtapasAno2 + " " +numSlack2 + " " +offset2); 
            case 4:
                System.out.println(""+anoAEvaluar2 + " " +tipoCalcSeleccionado2 + " " +anoBase2 + " " +numHidro2 + " " +numEtapasAno2 + " " +numSlack2 + " " +offset2); 
            case 5:
                System.out.println(""+anoAEvaluar2 + " " +tipoCalcSeleccionado2 + " " +anoBase2 + " " +numHidro2 + " " +numEtapasAno2 + " " +numSlack2 + " " +offset2); 
            }
            
            
            /* Fin Codigo via CLI*/
                
        }
            
            
        else{
                     
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new PeajesCDEC().setVisible(true);
                    }
            });
        }   
    }    
    
    
    
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ActClientes;
    private javax.swing.JButton Directorio;
    private javax.swing.JTextField DirectorioLiquidacion;
    private javax.swing.JTextField DirectorioReliquidacion;
    private javax.swing.JTextField FecPago;
    private javax.swing.JComboBox Mes;
    private javax.swing.JComboBox Mes1;
    private javax.swing.JButton botonCalcular;
    private javax.swing.JButton botonCalcular1;
    private javax.swing.JButton botonCalcularReliq;
    private javax.swing.JButton botonDirectorioEntrada;
    private javax.swing.JButton botonDirectorioLiq;
    private javax.swing.JButton botonDirectorioSalida;
    private javax.swing.JButton botonEscReliq;
    private javax.swing.JTextField campoDirectorioEntrada;
    private javax.swing.JTextField campoDirectorioSalida;
    private javax.swing.JComboBox cuadroAnoAEvaluar;
    private javax.swing.JComboBox cuadroAnoBase;
    private javax.swing.JComboBox cuadroSeleccionHidro;
    private javax.swing.JTextField cuadroSeleccionNEtapas;
    private javax.swing.JTextField cuadroSeleccionOffset;
    private javax.swing.JTextField cuadroSeleccionSlack;
    private javax.swing.JComboBox cuadroSeleccionTipoCalculo;
    private javax.swing.JComboBox cuadroSeleccionTipoCalculo1;
    private javax.swing.JLabel etiquetaTiempo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JSplitPane jSplitPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JMenuItem menuOpciones;
    private javax.swing.JProgressBar progreso;
    private javax.swing.JLabel textoCalculo;
    // End of variables declaration//GEN-END:variables

    private void abrirDirectorioEntAccion() {
        String nombreOs = System.getProperty("os.name");
        System.out.println(nombreOs);
        File directorio0;
        final JFileChooser selectorDirEnt = new JFileChooser(".");
        if(nombreOs.equals("Windows XP")) {
            directorio0 = selectorDirEnt.getCurrentDirectory().getParentFile().getParentFile();
        }
        else {
            directorio0 = selectorDirEnt.getCurrentDirectory().getParentFile().getParentFile().getParentFile();
        }
        selectorDirEnt.setCurrentDirectory(directorio0);
        selectorDirEnt.setCurrentDirectory(new File(selectorDirEnt.getCurrentDirectory()+File.separator+"DatosPeajes"+File.separator+cuadroAnoAEvaluar.getSelectedItem()));
        File directorio = selectorDirEnt.getCurrentDirectory();
        if(directorio0.equals(directorio)) {
            JOptionPane.showMessageDialog(this,"AÃ±o a evaluar no ha sido creado.","Peajes Coordinador",JOptionPane.ERROR_MESSAGE);
        }
        selectorDirEnt.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int resultado = selectorDirEnt.showOpenDialog(this);
        if(resultado==JFileChooser.CANCEL_OPTION) return;
        nombreDirEnt = selectorDirEnt.getSelectedFile();
        campoDirectorioEntrada.setText(nombreDirEnt.getPath());
    }

    private void abrirDirectorioSalAccion() {
        String nombreOs = System.getProperty("os.name");
        File directorio0;
        final JFileChooser selectorDirSal = new JFileChooser(".");
        if(nombreOs.equals("Windows XP")) {
            directorio0 = selectorDirSal.getCurrentDirectory().getParentFile().getParentFile();
        }
        else {
            directorio0 = selectorDirSal.getCurrentDirectory().getParentFile().getParentFile().getParentFile();
        }
        selectorDirSal.setCurrentDirectory(directorio0);
        selectorDirSal.setCurrentDirectory(new File(selectorDirSal.getCurrentDirectory()+File.separator+"DatosPeajes"+File.separator+cuadroAnoAEvaluar.getSelectedItem()));
        File directorio = selectorDirSal.getCurrentDirectory();
        if(directorio0.equals(directorio)) {
            JOptionPane.showMessageDialog(this,"AÃ±o a evaluar no ha sido creado.","Peajes Coordinador",JOptionPane.ERROR_MESSAGE);
        }
        selectorDirSal.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int resultado = selectorDirSal.showOpenDialog(this);
        if(resultado==JFileChooser.CANCEL_OPTION) return;
        nombreDirSal = selectorDirSal.getSelectedFile();
        campoDirectorioSalida.setText(nombreDirSal.getPath());
    }

    private void seleccionaNumHid() {
        anoAEvaluar = Integer.parseInt((String) cuadroAnoAEvaluar.getSelectedItem());
        cuadroSeleccionHidro.setSelectedIndex((anoAEvaluar-1962)-40+1);
    }

    private void habilitarAnoABase() {
        tipoCalcSeleccionado=(cuadroSeleccionTipoCalculo.getSelectedItem().equals("AÃ±o a Evaluar = AÃ±o Base")?0:1);
        if(tipoCalcSeleccionado==0) cuadroAnoBase.setEnabled(false);
        else cuadroAnoBase.setEnabled(true);
    }
    
    private void seleccionTipoLiquidacion() {
        LiquidacionReliquidacion=(cuadroSeleccionTipoCalculo1.getSelectedItem().equals("CÃ¡lculo de LiquidaciÃ³n")?true:false);
        if(LiquidacionReliquidacion) System.out.println("Seleccionado CÃ¡lculo de LiquidaciÃ³n");
        else System.out.println("Seleccionado CÃ¡lculo de ReliquidaciÃ³n");
    } 
    

    private void calcular() {
        botonCalcular.setEnabled(false);
//        timer.start();
        int numEtapasAno = Integer.parseInt(cuadroSeleccionNEtapas.getText());
        int offset = Integer.parseInt(cuadroSeleccionOffset.getText());
        int numSlack = Integer.parseInt(cuadroSeleccionSlack.getText());
        int anoBase;
        if (tipoCalcSeleccionado==0) {
            anoBase=anoAEvaluar;
        }
        else {
            anoBase=Integer.parseInt((String) cuadroAnoBase.getSelectedItem());
        }
        int numHidro=Integer.parseInt((String) cuadroSeleccionHidro.getSelectedItem());
        boolean clientes = (ActClientes.isEnabled() && ActClientes.isSelected());
        Prorratas.Comenzar(nombreDirEnt,nombreDirSal,anoAEvaluar,tipoCalcSeleccionado,
                anoBase,numHidro,numEtapasAno,numSlack,offset,clientes);
//        try {
//            Prorratas.CalculaProrratas(nombreDirEnt, nombreDirSal, anoAEvaluar, tipoCalcSeleccionado, anoBase, numHidro, numEtapasAno, numSlack, offset, clientes);
//        } catch (IOException e) {
//            e.printStackTrace(System.out);
//        }
        tInicio=System.currentTimeMillis();
    }

    private void calcularPeajes() {
        int anoBase;
        if (tipoCalcSeleccionado==0) {
            anoBase=anoAEvaluar;
        }
        else {
            anoBase=Integer.parseInt((String) cuadroAnoBase.getSelectedItem());
        }
        Peajes.calculaPeajes(nombreDirEnt, nombreDirSal, anoAEvaluar);
    }
    
    private void calcularPeajesIny() {
        int anoBase;
        if (tipoCalcSeleccionado==0) {
            anoBase=anoAEvaluar;
        }
        else {
            anoBase=Integer.parseInt((String) cuadroAnoBase.getSelectedItem());
        }
        seleccionTipoLiquidacion();
        //System.out.println(LiquidacionReliquidacion);
        PeajesIny.calculaPeajesIny(nombreDirEnt, nombreDirSal, anoAEvaluar,LiquidacionReliquidacion);
        tInicio=System.currentTimeMillis();
    }
    private void CalculaLiquiMesIny() {
        int anoBase;
        if (tipoCalcSeleccionado==0) {
            anoBase=anoAEvaluar;
        }
        else {
            anoBase=Integer.parseInt((String) cuadroAnoBase.getSelectedItem());
        }
        LiquidacionReliquidacion = true;
        PeajesIny.calculaPeajesIny(nombreDirEnt, nombreDirSal, anoAEvaluar,LiquidacionReliquidacion);
        mesAEvaluar = (String) Mes.getSelectedItem();
        PeajesIny.LiquiMesIny(mesAEvaluar,anoAEvaluar);

    }
    private void calcularPeajesRet() {
        int anoBase;
        if (tipoCalcSeleccionado==0) {
            anoBase=anoAEvaluar;
        }
        else {
            anoBase=Integer.parseInt((String) cuadroAnoBase.getSelectedItem());
        }
        seleccionTipoLiquidacion();
        PeajesRet.calculaPeajesRet(nombreDirEnt, nombreDirSal,anoAEvaluar,LiquidacionReliquidacion);
    }
    private void CalculaLiquiMesRet() {
        int anoBase;
        if (tipoCalcSeleccionado==0) {
            anoBase=anoAEvaluar;
        }
        else {
            anoBase=Integer.parseInt((String) cuadroAnoBase.getSelectedItem());
        }
        LiquidacionReliquidacion = true;
        PeajesRet.calculaPeajesRet(nombreDirEnt, nombreDirSal, anoAEvaluar,LiquidacionReliquidacion);
        mesAEvaluar = (String) Mes.getSelectedItem();
        PeajesRet.LiquiMesRet(mesAEvaluar,anoBase);
    }
    private void EscribeLiquiMes() {
        int anoBase;
        if (tipoCalcSeleccionado==0) {
            anoBase=anoAEvaluar;
        }
        else {
            anoBase=Integer.parseInt((String) cuadroAnoBase.getSelectedItem());
        }
        mesAEvaluar = (String) Mes.getSelectedItem();
        String fechaPag= (String) jTextField1.getText();
       EscribeArchivosFinales.EscribeLiqMes(mesAEvaluar,anoAEvaluar,nombreDirSal,nombreDirEnt, fechaPag);
       }
    private void EscribeLiquiAno() {
        int anoBase;
        if (tipoCalcSeleccionado==0) {
            anoBase=anoAEvaluar;
        }
        else {
            anoBase=Integer.parseInt((String) cuadroAnoBase.getSelectedItem());
        }
        mesAEvaluar = (String) Mes.getSelectedItem();
        EscribeArchivosFinales.EscribeLiqAno(mesAEvaluar,anoAEvaluar,nombreDirSal);

    }

      //Calculo de Reliquidacipn

    private void abrirDirectorioEntAccionRel() {
        String nombreOs = System.getProperty("os.name");
        File directorio0;
        final JFileChooser selectorDirEnt = new JFileChooser(".");
        if(nombreOs.equals("Windows XP")) {
            directorio0 = selectorDirEnt.getCurrentDirectory().getParentFile().getParentFile();
        }
        else {
            directorio0 = selectorDirEnt.getCurrentDirectory().getParentFile().getParentFile().getParentFile();
        }
        selectorDirEnt.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int resultado = selectorDirEnt.showOpenDialog(this);
        if(resultado==JFileChooser.CANCEL_OPTION) return;
        nombreDirLiq = selectorDirEnt.getSelectedFile();
        DirectorioLiquidacion.setText(nombreDirLiq.getPath());
    }

    private void abrirDirectorioSalAccionRel() {
        String nombreOs = System.getProperty("os.name");
        File directorio0;
        final JFileChooser selectorDirSal = new JFileChooser(".");
        if(nombreOs.equals("Windows XP")) {
            directorio0 = selectorDirSal.getCurrentDirectory().getParentFile().getParentFile();
        }
        else {
            directorio0 = selectorDirSal.getCurrentDirectory().getParentFile().getParentFile().getParentFile();
        }
        selectorDirSal.setCurrentDirectory(directorio0);
        selectorDirSal.setCurrentDirectory(new File(selectorDirSal.getCurrentDirectory()+File.separator+"DatosPeajes"+File.separator+cuadroAnoAEvaluar.getSelectedItem()));
        File directorio = selectorDirSal.getCurrentDirectory();
        if(directorio0.equals(directorio)) {
            JOptionPane.showMessageDialog(this,"AÃ±o a evaluar no ha sido creado.","Peajes Coordinador",JOptionPane.ERROR_MESSAGE);
        }
        selectorDirSal.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int resultado = selectorDirSal.showOpenDialog(this);
        if(resultado==JFileChooser.CANCEL_OPTION) return;
        nombreDirReliq = selectorDirSal.getSelectedFile();
        DirectorioReliquidacion.setText(nombreDirReliq.getPath());
    }

      private void calcularReliquidacion() {
        int anoBase;
        nombreDirEnt=nombreDirReliq;
        nombreDirSal=nombreDirReliq;
        if (tipoCalcSeleccionado==0) {
            anoBase=anoAEvaluar;
        }
        else {
            anoBase=Integer.parseInt((String) cuadroAnoBase.getSelectedItem());
        }
        LiquidacionReliquidacion = false;
        mesAEvaluar = (String) Mes1.getSelectedItem();
        System.out.println("Calculando Peajes con IT Real...");
        Peajes.calculaPeajes(nombreDirEnt, nombreDirSal, anoAEvaluar);
        System.out.println("Calculando Pagos de InyecciÃ³n con IT Real...");
        PeajesIny.calculaPeajesIny(nombreDirEnt, nombreDirSal, anoAEvaluar,LiquidacionReliquidacion);
        PeajesIny.LiquiMesIny(mesAEvaluar,anoAEvaluar);
        System.out.println("Calculando Pagos de Retiro con IT Real...");
        PeajesRet.calculaPeajesRet(nombreDirEnt, nombreDirSal, anoAEvaluar,LiquidacionReliquidacion);
        System.out.println("Escribiendo Archivos mes con IT Real...");
        PeajesRet.LiquiMesRet(mesAEvaluar,anoBase);
        EscribeArchivosFinales.EscribeLiqMes(mesAEvaluar,anoAEvaluar,nombreDirSal,nombreDirEnt, "");
        System.out.println("");
        System.out.println("Ahora puede escribir los archivos de ReliquidaciÃ³n finales");
    }

 private void EscReliquidacion() {
        int anoBase;
        nombreDirEnt=nombreDirReliq;
        nombreDirSal=nombreDirReliq;
        String fechaPago= (String) FecPago.getText();
        if (tipoCalcSeleccionado==0) {
            anoBase=anoAEvaluar;
        }
        else {
            anoBase=Integer.parseInt((String) cuadroAnoBase.getSelectedItem());
        }
        mesAEvaluar = (String) Mes1.getSelectedItem();
        System.out.println("Escribiendo Archivos de ReliquidaciÃ³n con IT Real...");
        Reliquidacion.Reliquidacion(nombreDirLiq, nombreDirReliq, mesAEvaluar,anoAEvaluar,fechaPago);
        System.out.println("");
        System.out.println("ReliquidaciÃ³n "+mesAEvaluar+" finalizada");
    }
 
    private void salirPeajes() {
        //Delete all registered temp files:
        for (File f: lTempFiles){
            f.delete();
        }
        this.dispose();
        System.exit(0);    
    }
 
    private void leePropiedades(){
        propiedades = new Properties();
        if (nombreDirEnt == null) {
            abrirDirectorioEntAccion();
        }
        String DirBaseEntrada=nombreDirEnt.toString();
        String ArchivoConfiguracion=DirBaseEntrada + SLASH +  "config.properties";
        System.out.println("Cargando archivo desde " + ArchivoConfiguracion);
        Lee.leePropiedades(propiedades,ArchivoConfiguracion);
        //cuadroSeleccionHidro.setSelectedIndex((anoAEvaluar-1962)-40+1);
        propiedades.list(System.out);
        jTextField1.setText(propiedades.getProperty("fecha_pago_liq"));
        FecPago.setText(propiedades.getProperty("fecha_pago_reliq"));
        cuadroSeleccionHidro.setSelectedItem(Integer.parseInt(propiedades.getProperty("num_hidro")));
        Mes.setSelectedItem(propiedades.getProperty("mes_evaluar_liq"));
        Mes1.setSelectedItem(propiedades.getProperty("mes_evaluar_rit"));
        cuadroSeleccionSlack.setText(propiedades.getProperty("num_barra_slack"));
        cuadroSeleccionOffset.setText(propiedades.getProperty("offset"));
        cuadroSeleccionNEtapas.setText(propiedades.getProperty("num_etapas_anno"));
        cuadroAnoAEvaluar.setSelectedItem(propiedades.getProperty("a_evaluar"));
        
        LiquidacionReliquidacion = Boolean.parseBoolean(propiedades.getProperty("liquidacionreliquidacion"));
        cuadroSeleccionTipoCalculo1.setSelectedIndex(LiquidacionReliquidacion?0:1);
        nombreDirEnt = new File(propiedades.getProperty("dir_entrada"));
        campoDirectorioEntrada.setText(nombreDirEnt.getPath());
        nombreDirSal = new File(propiedades.getProperty("dir_salida"));
        campoDirectorioSalida.setText(nombreDirSal.getPath());
        
        
        tipoCalcSeleccionado = Integer.parseInt(propiedades.getProperty("tipo_calculo_seleccionado"));// propiedades.setProperty("tipo_calculo_seleccionado", Integer.toString(tipoCalcSeleccionado));
        
        cuadroSeleccionTipoCalculo.setSelectedIndex(tipoCalcSeleccionado);
        if(tipoCalcSeleccionado==0) cuadroAnoBase.setEnabled(false);
        else {
            cuadroAnoBase.setEnabled(true);
            cuadroAnoBase.setSelectedItem(propiedades.getProperty("a_base"));
        }
        
        
        ActClientes.setSelected(Boolean.parseBoolean(propiedades.getProperty("clientes")));

        
        
        
        
 
 }
 
 
    private void EscribrePropiedades(){
        propiedades = new Properties();
        if (nombreDirEnt == null) {
            abrirDirectorioEntAccion();
        }
        String DirBaseEntrada = nombreDirEnt.toString();
        String ArchivoConfiguracion = DirBaseEntrada + SLASH +  "config.properties";
        System.out.println("Guardando archivo");
        
        LiquidacionReliquidacion=(cuadroSeleccionTipoCalculo1.getSelectedItem().equals("CÃ¡lculo de LiquidaciÃ³n")?true:false);
        
        int anoBase;
        if (tipoCalcSeleccionado==0) {
            anoBase=anoAEvaluar;
        }
        else {
            anoBase=Integer.parseInt((String) cuadroAnoBase.getSelectedItem());
        
        }
        
        
        
        //guardo parametros en propiedades
        
        propiedades.setProperty("tipo_calculo_seleccionado", Integer.toString(tipoCalcSeleccionado));
        propiedades.setProperty("a_evaluar", (String) cuadroAnoAEvaluar.getSelectedItem());
        propiedades.setProperty("a_base", (String) String.valueOf(anoBase));
        propiedades.setProperty("mes_evaluar_rit", (String) Mes1.getSelectedItem());
        propiedades.setProperty("dir_entrada", nombreDirEnt.toString());
        propiedades.setProperty("dir_salida", nombreDirSal == null?"":nombreDirSal.toString());
        propiedades.setProperty("liquidacionreliquidacion", String.valueOf(LiquidacionReliquidacion));
        propiedades.setProperty("num_etapas_anno", cuadroSeleccionNEtapas.getText());
        propiedades.setProperty("offset", cuadroSeleccionOffset.getText());
        propiedades.setProperty("num_barra_slack",cuadroSeleccionSlack.getText());
        propiedades.setProperty("num_hidro",(String) cuadroSeleccionHidro.getSelectedItem());
        propiedades.setProperty("clientes",String.valueOf (ActClientes.getInheritsPopupMenu()));
        propiedades.setProperty("mes_evaluar_liq", (String) Mes.getSelectedItem());
        propiedades.setProperty("dir_liqmes",nombreDirLiq == null?"":nombreDirLiq.toString());
        propiedades.setProperty("dir_salida_reliq",nombreDirReliq == null?"":nombreDirReliq.toString());
        propiedades.setProperty("fecha_pago_liq",(String) jTextField1.getText());
        propiedades.setProperty("fecha_pago_reliq",(String) FecPago.getText());
        //escribo parametros
        
        Escribe.EscribePropiedades(propiedades,ArchivoConfiguracion);

    }
    
    private void reLoadOptions() {
        if (config == null) {
            initOptionFile();
        }
        
        //Seleccion de periodos:
        String[] agnos;
        String sMinEvalua = getOptionValue("Min Evalua", PeajesConstant.DataType.INTEGER);
        String sMaxEvalua = getOptionValue("Max Evalua", PeajesConstant.DataType.INTEGER);
        int nMinEvalua = Integer.parseInt(sMinEvalua);
        int nMaxEvalua = Integer.parseInt(sMaxEvalua);
        if (nMinEvalua >= nMaxEvalua) {
            agnos = new String[1];
            agnos[0] = sMinEvalua;
        } else {
            agnos = new String[nMaxEvalua - nMinEvalua + 1];
            for (int h = nMinEvalua; h <= nMaxEvalua; h++) {
                agnos[h - nMinEvalua] = String.valueOf(h);
            }
        }
        cuadroAnoAEvaluar.setModel(new javax.swing.DefaultComboBoxModel(agnos));
        
        //Hidrologias:
        String[] hydros;
        String sMinHydro = getOptionValue("Min Hidrologias", PeajesConstant.DataType.INTEGER);
        String sMaxHydro = getOptionValue("Max Hidrologias", PeajesConstant.DataType.INTEGER);
        int nMinHydro = Integer.parseInt(sMinHydro);
        int nMaxHydro = Integer.parseInt(sMaxHydro);
        if (nMinHydro >= nMaxHydro) {
            hydros = new String[1];
            hydros[0] = sMinHydro;
        } else {
            hydros = new String[nMaxHydro - nMinHydro + 1];
            for (int h = nMinHydro; h <= nMaxHydro; h++) {
                hydros[h - nMinHydro] = String.valueOf(h);
            }
        }
        cuadroSeleccionHidro.setModel(new javax.swing.DefaultComboBoxModel(hydros));
        
        //Actualiza clientes:
        String sActClientes = getOptionValue("Actualiza Clientes", PeajesConstant.DataType.BOOLEAN);
        ActClientes.setEnabled(Boolean.parseBoolean(sActClientes));
        
        //Reglas de calculo de peajes:
        String sCuadroSeleccionTipoCalculo1 = getOptionValue("Reglas Reliquidacion", PeajesConstant.DataType.BOOLEAN);
        if (Boolean.parseBoolean(sCuadroSeleccionTipoCalculo1)) {
            cuadroSeleccionTipoCalculo1.setEnabled(true);
        } else {
            cuadroSeleccionTipoCalculo1.setSelectedItem(0);
            cuadroSeleccionTipoCalculo1.setEnabled(false);
        }
        
        this.validate();
    }
    
    private void initOptionFile() {
        try {
            File f_user = getUserOptionFile();
            Properties pDefault = new Properties();
            java.io.InputStream in_default = getClass().getResourceAsStream("/cl/coordinador/peajes/resources/" + ARCHIVO_CONFIG); //resources deben cargarse desde un stream
            assert (in_default != null) : "Cambiaron de ubicacion el archivo de configuracion o renombraron los packages?";
            pDefault.loadFromXML(in_default);
            if (!f_user.exists()) {
                config = pDefault;
            } else {
                Properties pUser = loadOptionFile(f_user);
                String versionUser = pUser.getProperty("Version");
                if (versionUser == null) {
                    config = pDefault;
                } else {
                    if (!versionUser.equalsIgnoreCase(pDefault.getProperty("Version"))) {
                        config = pDefault;
                    } else {
                        config = pUser;
                    }
                }
            }
        } catch (IOException e) {
            e.printStackTrace(System.out); //TODO: better message to user
        }
    }
    
    private void showOptionWindow() {
        if (config == null) {
            initOptionFile();
        }
        PeajesConfigGUI guiOption = new PeajesConfigGUI(this, config);
        guiOption.setLocationRelativeTo(this);
        guiOption.setVisible(true);
        reLoadOptions(); //Asume que espera que se cierre la ventana para continuar
    }
    
    private static java.io.File getUserOptionFile () {
//        String folderPath = System.getProperty("user.home") + File.separator + ".calculapeajes"; //TODO: May be implement for other OS
        String folderPath = System.getenv("APPDATA") + File.separator + "coordinador";
        String fileConfig = folderPath + File.separator + ARCHIVO_CONFIG;
        File f_fileConfig = new File (fileConfig);
        return f_fileConfig;
    }
    
    /**
     * Carga archivo de propiedades del Peajator
     *
     * @param f_propiedades archivo propiedades xml
     * @return instancia properties
     * @throws java.io.FileNotFoundException si el archivo no existe
     * @throws java.io.IOException si hay problema de acceso al archivo
     */
    public static java.util.Properties loadOptionFile(java.io.File f_propiedades) throws java.io.FileNotFoundException, java.io.IOException {
        java.io.FileInputStream in = new java.io.FileInputStream(f_propiedades);
        java.util.Properties f_properties = new java.util.Properties();
        f_properties.loadFromXML(in);
        return f_properties;
    }

    /**
     * Guarda a archivo (xml) del argumento las propiedades Peajator
     *
     * @param propiedades instancia properties
     * @throws java.io.FileNotFoundException si el archivo no existe
     * @throws java.io.IOException si hay problema de acceso al archivo
     */
    public static void saveOptionFile(java.util.Properties propiedades) throws java.io.FileNotFoundException, java.io.IOException {
        config = propiedades;
        java.io.File f_config = getUserOptionFile(); //Siempre grabamos a la caperta del user. Nunca al resource
        if (!f_config.getParentFile().exists()) {
            f_config.getParentFile().mkdir();
        }
        java.io.FileOutputStream out = new java.io.FileOutputStream(f_config);
        config.storeToXML(out, "---PEAJATOR CONFIG FILE---");
        out.close();
    }
    
    /**
     * Devuelve el valor del parametro seleccionado
     *
     * @param key valor completo de la llave. no usar null
     * @param type tipo de valor (opcional - usar null para busqueda simple)
     * @return valor correspondiente a la llava o null si no se encuentra la
     * llave
     */
    public static String getOptionValue(String key, PeajesConstant.DataType type) {
        String value = config.getProperty(key);
        if (value == null) {
            if (type != null) {
                value = config.getProperty(key + PeajesConstant.KEY_SEPARATOR + type.name());
            }
            if (value == null) {
                for (String s : config.stringPropertyNames()) {
                    if (s.toLowerCase().startsWith(key.toLowerCase())) {
                        value = s;
                        break;
                    }
                }
            }
        }
        return value;
    }
    
    private static final java.util.List<File> lTempFiles = new java.util.LinkedList<File>();

    /**
     * Crea un nuevo archivo temporal (contralado por la VM Java)
     * <br>Se supone la VM limpia estos temporales (no creo que sirva)
     *
     * @param prefix prefijo opcional
     * @param suffix sufijo opcional (incluir 'punto' para agregla extensiones).
     * Eg. '.bin'
     * @return instancia del archivo temporal creado
     * @throws IOException si no se pudo crear el archivo temporal
     */
    public static File createTempFile(String prefix, String suffix) throws IOException {

        File temp = File.createTempFile(prefix, suffix);
        temp.deleteOnExit();
        if (!(temp.delete())) {
            throw new IOException("Could not delete temp file: " + temp.getAbsolutePath());
        }
        lTempFiles.add(temp);
        return temp;
    }

    class TimerListener implements ActionListener {
        int porcentaje=0;
        int deltat=0;
        int horas=0;
        int minutos=0;
        int segundos=0;
        int maximum=100;
        public void actionPerformed(ActionEvent evt) {
            long tActual = System.currentTimeMillis();
            deltat=(int)Math.round((tActual-tInicio)/1000.0);
            tiempo.setTime(deltat);
            minutos=(int)Math.floor(deltat/60.0);
            segundos=(minutos==0?deltat:(int)Math.floor(deltat%(60*minutos)));
            etiquetaTiempo.setText(minutos+":"+(segundos<10?"0"+segundos:segundos)+" min:seg");

            if(Prorratas.cargando()==true){
            	textoCalculo.setText("Cargando Archivos de Entrada");
            	progreso.setStringPainted(false);
            	progreso.setIndeterminate(true);
            }
            else if(Prorratas.calculaFlujos()==true){
            	textoCalculo.setText("Calculando Flujos de Potencia y Prorratas por etapa");
            	progreso.setStringPainted(true);
            	progreso.setIndeterminate(false);
            	porcentaje=(int)(Prorratas.obtenerProgreso()*100);
            	progreso.setValue(porcentaje);
            }
            else if(Prorratas.calculaProrratas()==true){
            	textoCalculo.setText("Calculando Prorratas anuales");
            	progreso.setStringPainted(false);
            	progreso.setIndeterminate(true);
            }
            else if(Prorratas.guardando()==true){
            	textoCalculo.setText("Guardando Archivos de Resultados");
            	progreso.setStringPainted(false);
            	progreso.setIndeterminate(true);
            }
            else if (Prorratas.terminado()==true) {
                textoCalculo.setText("Terminado");
                Toolkit.getDefaultToolkit().beep();
//                timer.stop();
                botonCalcular.setEnabled(true);
                progreso.setIndeterminate(false);
                progreso.setValue(maximum);
            }
            else if(PeajesIny.cargando()==true){
            	textoCalculo.setText("Cargando Archivos de Entrada");
            	progreso.setStringPainted(false);
            	progreso.setIndeterminate(true);
            }
            else if(PeajesIny.calculando()==true){
            	textoCalculo.setText("Calculando Pagos de Inyeccion");
            	progreso.setStringPainted(false);
            	progreso.setIndeterminate(true);
            }
            else if(PeajesIny.escribiendo()==true){
            	textoCalculo.setText("Escribiendo Pagos de Inyeccion");
            	progreso.setStringPainted(false);
            	progreso.setIndeterminate(true);
            }

        }
    }

}
